<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fengshiqing.springcloud.dao.ProductMapper">

    <resultMap id="product_entity_resultMap" type="com.fengshiqing.springcloud.dao.entity.ProductEntity">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="product_code" property="productCode" jdbcType="VARCHAR"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="description"  property="description" jdbcType="INTEGER"/>

        <result column="original_price" property="originalPrice" jdbcType="INTEGER"/>
        <result column="discount_price" property="discountPrice" jdbcType="INTEGER"/>

        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>

        <result column="del_flag" property="delFlag" jdbcType="BIGINT"/>
    </resultMap>


    <select id="selectByPrimaryKey" resultType="com.fengshiqing.springcloud.dao.entity.ProductEntity">
        SELECT
                id, `product_name`, product_code, description,
                original_price, discount_price,
                create_user, create_time, update_user, update_time, del_flag
        FROM t_product
        WHERE id = #{id,jdbcType=BIGINT}
    </select>


    <select id="selectProductByPage" resultType="com.fengshiqing.springcloud.dao.entity.ProductEntity">
        SELECT
                id,
                product_code    AS  `productCode`,
                product_name    AS  `productName`,
                original_price  AS  `originalPrice`,
                discount_price  AS  `discountPrice`,
                create_user     AS  `createUser`,
                create_time     AS  `createTime`,
                update_user     AS  `updateUser`,
                update_time     AS  `updateTime`
        FROM t_product
        # 从 第offset条记录开始(不包含offset)，返回pageSize条记录。例如：LIMIT 5,10; // 检索记录行 6-15
        # 换句话说，LIMIT n 等价于 LIMIT 0,n。
        LIMIT #{offset}, #{pageSize}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE
        FROM t_product
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fengshiqing.springcloud.dao.entity.ProductEntity" useGeneratedKeys="true">
        INSERT INTO t_product (
                `product_name`, product_code, description,
                original_price, discount_price,
                create_user, create_time, update_user, update_time
        ) VALUES (
                #{productCode}, #{productName}, #{description},
                #{originalPrice}, #{discountPrice},
                #{createUser}, #{createTime}, #{createUser}, #{createTime}
        )
    </insert>


    <update id="updateByPrimaryKey" parameterType="com.fengshiqing.springcloud.dao.entity.ProductEntity">
        UPDATE t_product
        SET
                product_name = #{name,jdbcType=VARCHAR},
                product_code = #{code,jdbcType=VARCHAR},
                description  = #{price,jdbcType=INTEGER},
                original_price  = #{price,jdbcType=INTEGER},
                discount_price  = #{price,jdbcType=INTEGER},
                update_user  = #{price,jdbcType=INTEGER},
                update_time  = NOW()
        WHERE id = #{id}
    </update>

</mapper>